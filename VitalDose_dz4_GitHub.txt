VitalDose_dz4
GitHub

1. На локальном репозитории сделать ветки для:
- Postman - git branch Postman
- Jmeter - git branch Jmeter
- CheckLists - git branch CheckLists
- Bug Reports - git branch Bug_Reports
- SQL - git branch SQL
- Charles - git branch Charles
- Mobile testing - git branch Mobile_testing

2. Запушить все ветки на внешний репозиторий - git push --all

3. В ветке Bug Reports сделать текстовый документ со структурой баг репорта - git checkout Bug_Reports -> touch Bug_structure.txt
nano Bug_structure.txt

Заголовок (Summary) -Короткое описание проблемы, явно указывающее на причину и тип ошибочной ситуации.

Проект (Project) - Название тестируемого проекта

Компонент приложения (Component) - Название части или функции тестируемого продукта

Номер версии (Version) - Версия, на которой была найдена ошибка

Критичность (Severity) -Наиболее распространена пятиуровневая система критичности:
                        S1 Блокирующий (Blocker)
                        S2 Критический (Critical)
                        S3 Значительный (Major)
                        S4 Незначительный (Minor)
                        S5 Тривиальный (Trivial)

Приоритет (Priority) - Приоритет дефекта:
                       P1 Высокий (High)
                       P2 Средний (Medium)
                       P3 Низкий (Low)

Статус (Status) - Статус бага. Зависит от используемой процедуры и жизненного цикла бага. Например:
                               Новый
                               Открыт
                               Закрыт

Автор (Author)  - Создатель баг репорта

Назначен на (Assigned To) - Имя сотрудника, назначенного на решение проблемы

Описание (Description) - Информация об окружении, на котором был найден баг: операционная система, сервис пак, имя и версия браузера, версия ПО чипа, версия библиотеки  и т.д.
                         Шаги, по которым можно легко воспроизвести ситуацию, приведшую к ошибке.
                         Полученный результат
                         Ожидаемый результат

Прикрепленный файл (Attachment) - Файл с логами, скриншот или любой другой документ, который может помочь прояснить причину ошибки или указать на способ решения проблемы

Ctrl+O -> Enter -> Ctrl+X

4. Запушить структуру багрепорта на внешний репозиторий - git add Bug_structure.txt -> git commit -m "some message" -> git push origin Bug_Reports

5. Вмержить ветку Bag Reports в Main - git checkout main -> git merge Bug_Reports -m "some message"

6. Запушить main на внешний репозиторий. - git push

7. В ветке CheckLists набросать структуру чек листа. - git checkout CheckLists -> touch checklstructure.txt
nano checklstructure.txt

1. Номер
2. Проверка
3. Результат
4. Комментарий

Ctrl+O -> Enter -> Ctrl+X

8. Запушить структуру на внешний репозиторий - git add checklstructure.txt -> git commit -m "some message" -> git push origin CheckLists

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main - Compare & pull request -> Create Pull request -> Merge Pull request - Confirm merge

10. Синхронизировать Внешнюю и Локальную ветки Main - git pull
===============================================================================================================================================================================